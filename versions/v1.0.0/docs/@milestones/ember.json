{"jsonapi":{"version":"1.0"},"data":{"type":"project","id":"@milestones/ember","attributes":{"name":"@milestones/ember","version":"1.0.1","navigationIndex":[{"type":"modules","items":[{"id":"@milestones/babel-plugin-strip-milestones","path":"modules/@milestones/babel-plugin-strip-milestones","name":"@milestones/babel-plugin-strip-milestones"},{"id":"@milestones/core","path":"modules/@milestones/core","name":"@milestones/core"}]}]},"relationships":{"modules":{"data":[{"type":"module","id":"@milestones/babel-plugin-strip-milestones"},{"type":"module","id":"@milestones/core"}]}}},"included":[{"type":"module","id":"@milestones/babel-plugin-strip-milestones","attributes":{"file":"@milestones/babel-plugin-strip-milestones","lineNumber":1,"description":null,"access":"public","tags":[],"variables":[],"functions":[{"file":"@milestones/babel-plugin-strip-milestones","lineNumber":14,"description":"<div class=\"docs-md\"><p>A Babel plugin that strips all imports and usage of <code>milestone(key, callback)</code> and replaces\nthem with an equivalent invocation of <code>callback()</code>.</p></div>","access":"public","tags":[],"exportType":"default","name":"stripMilestones","isAsync":false,"isGenerator":false,"signatures":[{"params":[{"name":"babel","type":"BabelCore","isOptional":false,"isRest":false}],"typeParams":[],"returns":{"type":"PluginObj&lt;State&gt;"}}]}]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"class","id":"@milestones/core~MilestoneCoordinator","attributes":{"file":"@milestones/core","lineNumber":129,"description":"<div class=\"docs-md\"><p>A <code>MilestoneCoordinator</code> is the result of an <code>activateMilestones</code> call,\nwhich provides the ability to interact with the milestones you&#39;ve activated\nand subsequently deactivate them.</p>\n<p>In most cases, you can simply use the importable <code>advanceTo</code> and\n<code>deactivateAllMilestones</code> functions from the <code>&#39;@milestones/core&#39;</code> module\nrather than interacting directly with a <code>MilestoneCoordinator</code> instance.</p></div>","access":"public","tags":[],"exportType":"named","name":"MilestoneCoordinator","isInterface":true,"fields":[],"methods":[{"file":"@milestones/core","lineNumber":134,"description":"<div class=\"docs-md\"><p>Advance until the given milestone is reached, continuing past any others\nthat are active for this coordinator in the meantime.</p></div>","access":"public","tags":[],"name":"advanceTo","isAsync":false,"isGenerator":false,"signatures":[{"params":[{"name":"key","type":"MilestoneKey","isOptional":false,"isRest":false}],"typeParams":[],"returns":{"type":"MilestoneTarget"}}],"isStatic":false},{"file":"@milestones/core","lineNumber":139,"description":"<div class=\"docs-md\"><p>Deactivate all milestones associated with this coordinator.</p></div>","access":"public","tags":[],"name":"deactivateAll","isAsync":false,"isGenerator":false,"signatures":[{"params":[],"typeParams":[],"returns":{"type":"void"}}],"isStatic":false}],"accessors":[]},"relationships":{"parentClass":{"data":null}}},{"type":"class","id":"@milestones/core~MilestoneHandle","attributes":{"file":"@milestones/core","lineNumber":204,"description":"<div class=\"docs-md\"><p>A <code>MilestoneHandle</code> represents a milestone that your application code is\ncurrently paused at. It provides methods for determining how that milestone\nwill ultimately resolve, whether you invoke the original behavior or stub\nout a different return value, error, or cancellation.</p></div>","access":"public","tags":[],"exportType":"named","name":"MilestoneHandle","isInterface":true,"fields":[{"file":"@milestones/core","lineNumber":208,"description":"<div class=\"docs-md\"><p>The id of this pending milestone.</p></div>","access":"public","tags":[],"name":"id","type":"MilestoneKey","isStatic":false,"isRequired":true},{"file":"@milestones/core","lineNumber":213,"description":"<div class=\"docs-md\"><p>Any tags on this pending milestone.</p></div>","access":"public","tags":[],"name":"tags","type":"MilestoneKey[]","isStatic":false,"isRequired":true}],"methods":[{"file":"@milestones/core","lineNumber":238,"description":"<div class=\"docs-md\"><p>Settle this milestone by causing it to behave as a canceled task.</p>\n<p>Note that cancellation is only available if <code>ember-concurrency</code> is\npresent.</p></div>","access":"public","tags":[],"name":"cancel","isAsync":true,"isGenerator":false,"signatures":[{"params":[{"name":"options","type":"ResolutionOptions","isOptional":true,"isRest":false}],"typeParams":[],"returns":{"type":"Promise&lt;void&gt;"}}],"isStatic":false},{"file":"@milestones/core","lineNumber":220,"description":"<div class=\"docs-md\"><p>Settle this milestone by invoking its original callback. The promise\nreturned by this method will resolve once the result of the original\ncallback has settled.</p></div>","access":"public","tags":[],"name":"continue","isAsync":true,"isGenerator":false,"signatures":[{"params":[{"name":"options","type":"ResolutionOptions","isOptional":true,"isRest":false}],"typeParams":[],"returns":{"type":"Promise&lt;void&gt;"}}],"isStatic":false},{"file":"@milestones/core","lineNumber":225,"description":"<div class=\"docs-md\"><p>Settle this milestone by resolving its promise with the given value.</p></div>","access":"public","tags":[],"name":"return","isAsync":true,"isGenerator":false,"signatures":[{"params":[{"name":"value","type":"unknown","isOptional":true,"isRest":false},{"name":"options","type":"ResolutionOptions","isOptional":true,"isRest":false}],"typeParams":[],"returns":{"type":"Promise&lt;void&gt;"}}],"isStatic":false},{"file":"@milestones/core","lineNumber":230,"description":"<div class=\"docs-md\"><p>Settle this milestone by rejecting its promise with the given error.</p></div>","access":"public","tags":[],"name":"throw","isAsync":true,"isGenerator":false,"signatures":[{"params":[{"name":"error","type":"unknown","isOptional":false,"isRest":false},{"name":"options","type":"ResolutionOptions","isOptional":true,"isRest":false}],"typeParams":[],"returns":{"type":"Promise&lt;void&gt;"}}],"isStatic":false}],"accessors":[]},"relationships":{"parentClass":{"data":null}}},{"type":"class","id":"@milestones/core~MilestoneTarget","attributes":{"file":"@milestones/core","lineNumber":150,"description":"<div class=\"docs-md\"><p>A <code>MilestoneTarget</code> represents the &#39;goal&#39; of proceeding to a certain\nmilestone. It&#39;s a <code>PromiseLike</code> object that resolves to a <code>MilestoneHandle</code>\nwhen its associated milestone is reached.</p>\n<p>A <code>MilestoneTarget</code> also contains shortcut methods for easily invoking\na particular behavior when the milestone is reached.</p></div>","access":"public","tags":[],"exportType":"named","name":"MilestoneTarget","isInterface":true,"fields":[],"methods":[{"file":"@milestones/core","lineNumber":195,"description":"<div class=\"docs-md\"><p>Trigger a task cancellation when the milestone is reached. The following two\nlines are equivalent:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedts\"><span class=\"hljs-keyword\">await</span> advanceTo(Milestone).andCancel();\n<span class=\"hljs-keyword\">await</span> advanceTo(Milestone).then(<span class=\"hljs-function\"><span class=\"hljs-params\">m</span> =&gt;</span> m.cancel());</code></pre>\n<p>Note that cancellation is only possible when <code>ember-concurrency</code> is present.</p></div>","access":"public","tags":[],"name":"andCancel","isAsync":true,"isGenerator":false,"signatures":[{"params":[{"name":"options","type":"ResolutionOptions","isOptional":true,"isRest":false}],"typeParams":[],"returns":{"type":"Promise&lt;void&gt;"}}],"isStatic":false},{"file":"@milestones/core","lineNumber":182,"description":"<div class=\"docs-md\"><p>Invoke the milestone&#39;s original callback when reached. The following two\nlines are equivalent:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedts\"><span class=\"hljs-keyword\">await</span> advanceTo(Milestone).andContinue();\n<span class=\"hljs-keyword\">await</span> advanceTo(Milestone).then(<span class=\"hljs-function\"><span class=\"hljs-params\">m</span> =&gt;</span> m.continue());</code></pre></div>","access":"public","tags":[],"name":"andContinue","isAsync":true,"isGenerator":false,"signatures":[{"params":[{"name":"options","type":"ResolutionOptions","isOptional":true,"isRest":false}],"typeParams":[],"returns":{"type":"Promise&lt;void&gt;"}}],"isStatic":false},{"file":"@milestones/core","lineNumber":160,"description":"<div class=\"docs-md\"><p>Return the given value when the milestone is reached. The following two\nlines are equivalent:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedts\"><span class=\"hljs-keyword\">await</span> advanceTo(Milestone).andReturn(value);\n<span class=\"hljs-keyword\">await</span> advanceTo(Milestone).then(<span class=\"hljs-function\"><span class=\"hljs-params\">m</span> =&gt;</span> m.return(value));</code></pre></div>","access":"public","tags":[],"name":"andReturn","isAsync":true,"isGenerator":false,"signatures":[{"params":[{"name":"value","type":"unknown","isOptional":true,"isRest":false},{"name":"options","type":"ResolutionOptions","isOptional":true,"isRest":false}],"typeParams":[],"returns":{"type":"Promise&lt;void&gt;"}}],"isStatic":false},{"file":"@milestones/core","lineNumber":171,"description":"<div class=\"docs-md\"><p>Throw the given error when the milestone is reached. The following two\nlines are equivalent:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedts\"><span class=\"hljs-keyword\">await</span> advanceTo(Milestone).andThrow(error);\n<span class=\"hljs-keyword\">await</span> advanceTo(Milestone).then(<span class=\"hljs-function\"><span class=\"hljs-params\">m</span> =&gt;</span> m.throw(error));</code></pre></div>","access":"public","tags":[],"name":"andThrow","isAsync":true,"isGenerator":false,"signatures":[{"params":[{"name":"error","type":"unknown","isOptional":false,"isRest":false},{"name":"options","type":"ResolutionOptions","isOptional":true,"isRest":false}],"typeParams":[],"returns":{"type":"Promise&lt;void&gt;"}}],"isStatic":false}],"accessors":[]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"@milestones/core","attributes":{"file":"@milestones/core","lineNumber":1,"description":null,"access":"public","tags":[],"variables":[],"functions":[{"file":"@milestones/core","lineNumber":16,"description":"<div class=\"docs-md\"><p>Activate all milestones matched by the given array of keys. Active milestones\nwill pause when they are reached until instructed on how to proceed via a\n<code>MilestoneHandle</code>.</p>\n<p>Inactive milestones will pass through to their given callbacks as though the\nmilestone wrapper weren&#39;t present at all.</p></div>","access":"public","tags":[],"exportType":"named","name":"activateMilestones","isAsync":false,"isGenerator":false,"signatures":[{"params":[{"name":"keys","type":"MilestoneKey[]","isOptional":false,"isRest":false},{"name":"options","type":"ActivationOptions","isOptional":true,"isRest":false}],"typeParams":[],"returns":{"type":"MilestoneCoordinator"}}]},{"file":"@milestones/core","lineNumber":61,"description":"<div class=\"docs-md\"><p>Advance until the given milestone is reached (continuing past any others hit in\nthe meantime). This function returns a <code>MilestoneTarget</code>, which is a thenable\nobject that will resolve to a <code>MilestoneHandle</code> once the milestone is reached,\nbut before its callback begins execution. This handle can be used to determine\nthe behavior of the milestone.</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedts\"><span class=\"hljs-keyword\">let</span> milestone = <span class=\"hljs-keyword\">await</span> advanceTo(MyMilestone);\n<span class=\"hljs-comment\">// Make any assertions about the state of the world here</span>\n<span class=\"hljs-keyword\">await</span> milestone.continue();</code></pre>\n<p><code>MilestoneTarget</code>s also include shortcut methods if you don&#39;t need to hold\nwhen the milestone is reached and just want to specify the milestone&#39;s behavior:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedts\"><span class=\"hljs-keyword\">await</span> advanceTo(MyMilestone).andContinue();</code></pre></div>","access":"public","tags":[],"exportType":"named","name":"advanceTo","isAsync":false,"isGenerator":false,"signatures":[{"params":[{"name":"key","type":"MilestoneKey","isOptional":false,"isRest":false}],"typeParams":[],"returns":{"type":"MilestoneTarget"}}]},{"file":"@milestones/core","lineNumber":23,"description":"<div class=\"docs-md\"><p>Deactivate all active milestones.</p></div>","access":"public","tags":[],"exportType":"named","name":"deactivateAllMilestones","isAsync":false,"isGenerator":false,"signatures":[{"params":[],"typeParams":[],"returns":{"type":"void"}}]},{"file":"@milestones/core","lineNumber":87,"description":"<div class=\"docs-md\"><p>Marks the given piece of asynchronous code as a milestone. When activated, this\nwill enable a coordinator (e.g. test code) to control the behavior of that code,\npausing it and potentially stubbing out its outcome.</p>\n<p>When not activated, code wrapped in a milestone is immediately invoked as though\nthe wrapper weren&#39;t there at all.</p></div>","access":"public","tags":[],"exportType":"named","name":"milestone","isAsync":false,"isGenerator":false,"signatures":[{"params":[{"name":"id","type":"MilestoneKey","isOptional":false,"isRest":false},{"name":"callback","type":"() =&gt; T","isOptional":false,"isRest":false},{"name":"options","type":"MilestoneOptions","isOptional":true,"isRest":false}],"typeParams":["T extends PromiseLike&lt;unknown&gt;"],"returns":{"type":"T"}},{"params":[{"name":"id","type":"MilestoneKey","isOptional":false,"isRest":false},{"name":"options","type":"MilestoneOptions","isOptional":true,"isRest":false}],"typeParams":[],"returns":{"type":"PromiseLike&lt;void&gt;"}}]},{"file":"@milestones/core","lineNumber":260,"description":"<div class=\"docs-md\"><p>Set up the given list of milestones for the current test context. This is shorthand\nfor calling <code>activateMilestones</code> in a <code>beforeEach()</code> block and <code>deactivateAll()</code> in\nan <code>afterEach</code> block.</p></div>","access":"public","tags":[],"exportType":"named","name":"setupMilestones","isAsync":false,"isGenerator":false,"signatures":[{"params":[{"name":"keys","type":"MilestoneKey[]","isOptional":false,"isRest":false},{"name":"options","type":"ActivationOptions","isOptional":true,"isRest":false}],"typeParams":[],"returns":{"type":"void"}},{"params":[{"name":"hooks","type":"TestHooks","isOptional":false,"isRest":false},{"name":"keys","type":"MilestoneKey[]","isOptional":false,"isRest":false},{"name":"options","type":"ActivationOptions","isOptional":true,"isRest":false}],"typeParams":[],"returns":{"type":"void"}}]}]},"relationships":{"classes":{"data":[{"type":"class","id":"@milestones/core~MilestoneCoordinator"},{"type":"class","id":"@milestones/core~MilestoneHandle"},{"type":"class","id":"@milestones/core~MilestoneTarget"}]},"components":{"data":[]}}}]}
